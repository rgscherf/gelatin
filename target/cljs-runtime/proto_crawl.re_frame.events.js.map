{"version":3,"sources":["proto_crawl/re_frame/events.cljs"],"mappings":";;;;;AAOA,AAAA,AAACA,AAEC,AAAYC,AAAGC;AAAf,AACED;;AAEJ,AAAA,AAACD,AAEC,AAAAG,AAAYF;AAAZ,AAAA,AAAAG,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAgBF;AAAhB,AAAAG,AAAAD,AAAA,AAAA,AAAkBE;AAAlB,AACE,AAAAC,AAEE,AAAA,AAAI,AAACC,AAAIC,AAA4BH,AACnC,AAACI,AAAyBT,AAAGK;AAHjC,AAAA,AAAAC;AAAAA;;AAKEN","names":["re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2","db","_","p__44295","vec__44296","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","key-pressed","or__4131__auto__","cljs.core.get.cljs$core$IFn$_invoke$arity$2","proto-crawl.controls.main/movement-key-names","proto-crawl.controls.main/take-move-input"],"sourcesContent":["(ns proto-crawl.re-frame.events\n  \"Re-Frame events\"\n  (:require\n    [re-frame.core :as rf]\n    [day8.re-frame.tracing :refer-macros [fn-traced]]\n    [proto-crawl.controls.main :as controls]))\n\n(rf/reg-event-db\n  :player-ended-turn\n  (fn-traced [db _]\n    db))\n\n(rf/reg-event-db\n  :key-down\n  (fn-traced [db [_ key-pressed]]\n    (or\n      ;; check to see if we have movement input\n      (if (get controls/movement-key-names key-pressed)\n        (controls/take-move-input db key-pressed))\n      ;; finally, if it wasn't a valid input, drop it.\n      db)))\n"]}